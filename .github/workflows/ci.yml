name: ci

on:
  # Trigger the workflow on push or pull request on main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run cron job every month, https://crontab.guru/every-month
    - cron: "0 0 1 * *"

# For GH pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # This job tests that the CC works
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # - name: Install dependencies
      #   run: poetry install --with dev --with docs

      # - name: Run checklist
      #   run: poetry run invoke checklist

      # - name: Run Nox
      #   if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')}}
      #   run: poetry run invoke nox -c --session=all

      # - name: Check pre-commit hook revs
      #   run: poetry run invoke check-pre-commit-versions

      # - name: Run tests
      #   run: poetry run invoke test

      # - name: Generate coverage report
      #   if: ${{ github.event_name == 'pull_request'}}
      #   run: poetry run invoke coverage-report

      # - name: Report code coverage
      #   if: ${{ github.event_name == 'pull_request'}}
      #   uses: orgoro/coverage@v3
      #   with:
      #       coverageFile: coverage.xml
      #       token: ${{ secrets.GITHUB_TOKEN }}

      - name: Report docstring coverage
        if: ${{ github.event_name == 'pull_request'}}
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COMMIT_SHA: ${{ github.event.pull_request.base.sha }}
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PR_NUMBER}/reviews \
            -d '{"body":"This is close bla to perfect! Please address the suggested inline change.","event":"COMMENT"}'

      # - name: Build docs
      #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
      #   run: poetry run invoke build-docs

      # - name: Upload artifact
      #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: 'site'

      # - name: Deploy to GitHub Pages
      #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
      #   id: deployment
      #   uses: actions/deploy-pages@v1
