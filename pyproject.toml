[tool.poetry]
name = "workbench_cookiecutter"
version = "0.1.0"
description = "Cookiecutter for workbench projects"
authors = ["Jasper Ginn <jasperginn@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.13,<3.10"
pydantic = "^1.10.6"

[tool.poetry.group.dev.dependencies]
flake8 = "^3.9.2"
mypy = "^0.812"
pre-commit = "^2.12.1"
pytest = "^5.2"
pytest-cov = "^2.11.1"
pytest-dotenv = "^0.5.2"
isort = "^5.9.2"
python-semantic-release = "7.28.1"
black = "^22.3.0"
ipykernel = "^6.15.1"
invoke = "<2.0.0"
gitpython = "^3.1.31"
python-dotenv = "^1.0.0"
nox = "^2022.11.21"
nox-poetry = "^1.0.2"
interrogate = "^1.5.0"
coverage = "^7.2.1"
codespell = "^2.2.4"
pyproject-fmt = "<0.9"
deptry = "^0.8.0"
pyupgrade = "^3.3.1"
bandit = "^1.7.5"
typeguard = "^3.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}
mkdocs-include-markdown-plugin = "^4.0.4"
mkdocs-jupyter = "^0.22.0"
mkdocs-material = "<9.0.0"

[tool.black]
line-length = 88
exclude = '''
^/(
  (
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.venv
    | _build
    | build
    | dist
    | notebooks
    | pyproject.toml
  )
)
'''

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
