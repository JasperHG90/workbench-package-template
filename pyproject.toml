[tool.poetry]
name = "workbench_cookiecutter"
version = "0.3.1"
description = "Cookiecutter for workbench projects"
authors = ["Jasper Ginn <jasperginn@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.13,<3.10"
pydantic = "^1.10.6"
cookiecutter = "^2.1.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.12.1"
python-semantic-release = "7.28.1"
ipykernel = "^6.15.1"
invoke = "<2.0.0"
gitpython = "^3.1.31"
python-dotenv = "^1.0.0"
nox = "^2022.11.21"
nox-poetry = "^1.0.2"
tomli = "^2.0.1"

[tool.poetry.group.static.dependencies]
mypy = "^0.812"
isort = "^5.9.2"
black = "^22.3.0"
interrogate = "^1.5.0"
codespell = "^2.2.4"
pyproject-fmt = "<0.9"
deptry = "^0.8.0"
pyupgrade = "^3.3.1"
bandit = "^1.7.5"
ruff = "^0.0.256"

[tool.poetry.group.test.dependencies]
pytest = ">6"
pytest-dotenv = "^0.5.2"
coverage = "^7.2.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}
mkdocs-include-markdown-plugin = "^4.0.4"
mkdocs-jupyter = "^0.22.0"
mkdocs-material = "<9.0.0"

[tool.black]
line-length = 88
exclude = '''
^/(
  (
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.venv
    | _build
    | build
    | dist
    | notebooks
    | pyproject.toml
  )
)
'''

[tool.isort]
profile = "black"

[tool.semantic_release]
version_variable = [
  "pyproject.toml:version"
]
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"              # build dists
dist_path = "dist/"                         # where to put dists
upload_to_release = false                    # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
patch_without_tag = true                    # patch release by default
changelog_sections = "feature, build, refactor, style, test, fix, breaking, documentation, performance"
commit_message = "{version} [ci skip]"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]
